<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "static AudioManager.play(_:):AudioManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "sound.url">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.sell(symbol:quantity:):API.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(format: &quot;%.6f&quot;, Double(Int(quantity)))">
            </PersistentString>
            <PersistentString
               value = "String(format: &quot;%.6f&quot;, round(quantity / stepSize))">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Balance.init(from:):Models.swift">
         <PersistentStrings>
            <PersistentString
               value = "try? decoder.container(keyedBy: StreamCodingKeys.self)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserAccountBot.listenToChanges():UserAccountBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(data: data, encoding: .utf8) ?? &quot;nil&quot;">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.buy(symbol:quoteOrderQty:):API.swift">
         <PersistentStrings>
            <PersistentString
               value = "Side.buy.rawValue">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.get(path:params:headers:):API.swift">
         <PersistentStrings>
            <PersistentString
               value = "request.headers">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradingTests.testTooMuchLoss():TradingTests.swift">
         <PersistentStrings>
            <PersistentString
               value = "bot.price.rise">
            </PersistentString>
            <PersistentString
               value = "bot.quantityTotal">
            </PersistentString>
            <PersistentString
               value = "bot.quantityQuoteTotal">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #2 in closure #1 in closure #2 in closure #1 in TradeBotView.body.getter:TradeBotView.swift">
         <PersistentStrings>
            <PersistentString
               value = "bot.profit">
            </PersistentString>
            <PersistentString
               value = "bot.price.current">
            </PersistentString>
            <PersistentString
               value = "bot.buys">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.socket():API.swift">
         <PersistentStrings>
            <PersistentString
               value = "URL(string: &quot;wss://stream.binance.com:9443&quot;)!.appendingPathComponent(&quot;/ws/\(streamName)&quot;)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Bot.lastChange.getter:Bot.swift">
         <PersistentStrings>
            <PersistentString
               value = "candles.last!.time - 5 &lt; candles.first!.time">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.action.getter:TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.highestProfitPercent">
            </PersistentString>
            <PersistentString
               value = "self.profitChange">
            </PersistentString>
            <PersistentString
               value = "parameters.maxPercentProfitLoss">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.onDataReceive(data:):TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "price">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "API.getServerTime():API.swift">
         <PersistentStrings>
            <PersistentString
               value = "Strings.baseURL.appendingPathComponent(&quot;api/v3/time&quot;)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.price.didset:TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.profitChange">
            </PersistentString>
            <PersistentString
               value = "self.highestProfitPercent">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.Price.modifyPrice(current:):TradeBot.swift">
      </ContextState>
      <ContextState
         contextName = "TradeBot.Price.forceDip(current:):TradeBot.swift">
      </ContextState>
      <ContextState
         contextName = "TradeBot.sellAll(reason:):TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "1 + parameters.minPercentToBuyAfterSell - parameters.minPercentToBuy">
            </PersistentString>
            <PersistentString
               value = "price">
            </PersistentString>
            <PersistentString
               value = "parameters">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.startSocket():TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.isTestMode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "TradeBot.takeAction():TradeBot.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.reason">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #2 in closure #2 in closure #1 in TradeBotView.body.getter:TradeBotView.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
